/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface InputBoxInterface extends utils.Interface {
  functions: {
    "addInput(address,bytes)": FunctionFragment;
    "getInputHash(address,uint256)": FunctionFragment;
    "getNumberOfInputs(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "addInput" | "getInputHash" | "getNumberOfInputs"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addInput",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getInputHash",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumberOfInputs",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "addInput", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getInputHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumberOfInputs",
    data: BytesLike
  ): Result;

  events: {
    "InputAdded(address,uint256,address,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "InputAdded"): EventFragment;
}

export interface InputAddedEventObject {
  dapp: string;
  inputIndex: BigNumber;
  sender: string;
  input: string;
}
export type InputAddedEvent = TypedEvent<
  [string, BigNumber, string, string],
  InputAddedEventObject
>;

export type InputAddedEventFilter = TypedEventFilter<InputAddedEvent>;

export interface InputBox extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: InputBoxInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    /**
     * MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.
     * Add an input to a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _input The contents of the input
     */
    addInput(
      _dapp: string,
      _input: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    /**
     * `_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.
     * Get the hash of an input in a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _index The index of the input in the DApp's input box
     */
    getInputHash(
      _dapp: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    /**
     * Get the number of inputs in a DApp's input box.
     * @param _dapp The address of the DApp
     */
    getNumberOfInputs(
      _dapp: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  /**
   * MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.
   * Add an input to a DApp's input box.
   * @param _dapp The address of the DApp
   * @param _input The contents of the input
   */
  addInput(
    _dapp: string,
    _input: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  /**
   * `_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.
   * Get the hash of an input in a DApp's input box.
   * @param _dapp The address of the DApp
   * @param _index The index of the input in the DApp's input box
   */
  getInputHash(
    _dapp: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  /**
   * Get the number of inputs in a DApp's input box.
   * @param _dapp The address of the DApp
   */
  getNumberOfInputs(
    _dapp: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    /**
     * MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.
     * Add an input to a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _input The contents of the input
     */
    addInput(
      _dapp: string,
      _input: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    /**
     * `_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.
     * Get the hash of an input in a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _index The index of the input in the DApp's input box
     */
    getInputHash(
      _dapp: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    /**
     * Get the number of inputs in a DApp's input box.
     * @param _dapp The address of the DApp
     */
    getNumberOfInputs(
      _dapp: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "InputAdded(address,uint256,address,bytes)"(
      dapp?: string | null,
      inputIndex?: BigNumberish | null,
      sender?: null,
      input?: null
    ): InputAddedEventFilter;
    InputAdded(
      dapp?: string | null,
      inputIndex?: BigNumberish | null,
      sender?: null,
      input?: null
    ): InputAddedEventFilter;
  };

  estimateGas: {
    /**
     * MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.
     * Add an input to a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _input The contents of the input
     */
    addInput(
      _dapp: string,
      _input: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    /**
     * `_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.
     * Get the hash of an input in a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _index The index of the input in the DApp's input box
     */
    getInputHash(
      _dapp: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    /**
     * Get the number of inputs in a DApp's input box.
     * @param _dapp The address of the DApp
     */
    getNumberOfInputs(
      _dapp: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    /**
     * MUST fire an `InputAdded` event accordingly.      Input larger than machine limit will raise `InputSizeExceedsLimit` error.
     * Add an input to a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _input The contents of the input
     */
    addInput(
      _dapp: string,
      _input: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    /**
     * `_index` MUST be in the interval `[0,n)` where `n` is the number of      inputs in the DApp's input box. See the `getNumberOfInputs` function.
     * Get the hash of an input in a DApp's input box.
     * @param _dapp The address of the DApp
     * @param _index The index of the input in the DApp's input box
     */
    getInputHash(
      _dapp: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    /**
     * Get the number of inputs in a DApp's input box.
     * @param _dapp The address of the DApp
     */
    getNumberOfInputs(
      _dapp: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

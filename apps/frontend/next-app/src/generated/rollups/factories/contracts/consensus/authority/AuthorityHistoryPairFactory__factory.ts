/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AuthorityHistoryPairFactory,
  AuthorityHistoryPairFactoryInterface,
} from "../../../../contracts/consensus/authority/AuthorityHistoryPairFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAuthorityFactory",
        name: "_authorityFactory",
        type: "address",
      },
      {
        internalType: "contract IHistoryFactory",
        name: "_historyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthorityFactory",
        name: "authorityFactory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IHistoryFactory",
        name: "historyFactory",
        type: "address",
      },
    ],
    name: "AuthorityHistoryPairFactoryCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authorityOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "calculateAuthorityHistoryAddressPair",
    outputs: [
      {
        internalType: "address",
        name: "authorityAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "historyAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorityFactory",
    outputs: [
      {
        internalType: "contract IAuthorityFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHistoryFactory",
    outputs: [
      {
        internalType: "contract IHistoryFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authorityOwner",
        type: "address",
      },
    ],
    name: "newAuthorityHistoryPair",
    outputs: [
      {
        internalType: "contract Authority",
        name: "authority_",
        type: "address",
      },
      {
        internalType: "contract History",
        name: "history_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_authorityOwner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "newAuthorityHistoryPair",
    outputs: [
      {
        internalType: "contract Authority",
        name: "authority_",
        type: "address",
      },
      {
        internalType: "contract History",
        name: "history_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161086f38038061086f83398101604081905261002f916100a0565b6001600160a01b03828116608081905290821660a08190526040805192835260208301919091527f030bcdc35fc24f8a53829b016647c842a9d981d1fed3783a7e282b6e6c9ea4a9910160405180910390a150506100da565b6001600160a01b038116811461009d57600080fd5b50565b600080604083850312156100b357600080fd5b82516100be81610088565b60208401519092506100cf81610088565b809150509250929050565b60805160a0516107486101276000396000818160f6015281816101ec01528181610313015261051601526000818160960152818161011f01528181610284015261044601526107486000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806339dcd4571461005c57806375689f8314610094578063b05cd1dc146100ce578063d73f347a146100e1578063f16b1a5c146100f4575b600080fd5b61006f61006a3660046106a5565b61011a565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161008b565b61006f6100dc3660046106d1565b610262565b61006f6100ef3660046106a5565b610441565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316629c5784306101568787610646565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c391906106f5565b60405163287ce2dd60e11b81526001600160a01b038083166004830152602482018690529193507f0000000000000000000000000000000000000000000000000000000000000000909116906350f9c5ba90604401602060405180830381865afa158015610235573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025991906106f5565b90509250929050565b604051632ce946e160e21b815230600482015260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b3a51b84906024016020604051808303816000875af11580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906106f5565b60405163446a4d3160e11b81526001600160a01b0380831660048301529193507f0000000000000000000000000000000000000000000000000000000000000000909116906388d49a62906024016020604051808303816000875af115801561035e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038291906106f5565b60405163159c5ea160e01b81526001600160a01b0380831660048301529192509083169063159c5ea190602401600060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b0386811660048301528516925063f2fde38b9150602401600060405180830381600087803b15801561042457600080fd5b505af1158015610438573d6000803e3d6000fd5b50505050915091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a3f27d33061047e8787610646565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed91906106f5565b604051632ab8b11560e01b81526001600160a01b038083166004830152602482018690529193507f000000000000000000000000000000000000000000000000000000000000000090911690632ab8b115906044016020604051808303816000875af1158015610561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058591906106f5565b60405163159c5ea160e01b81526001600160a01b0380831660048301529192509083169063159c5ea190602401600060405180830381600087803b1580156105cc57600080fd5b505af11580156105e0573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b0387811660048301528516925063f2fde38b9150602401600060405180830381600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050509250929050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b6001600160a01b03811681146106a257600080fd5b50565b600080604083850312156106b857600080fd5b82356106c38161068d565b946020939093013593505050565b6000602082840312156106e357600080fd5b81356106ee8161068d565b9392505050565b60006020828403121561070757600080fd5b81516106ee8161068d56fea2646970667358221220c9ff4c136426d9ba4f5c3e496e98c529a164caa845ab19e63e0cbefb6f48838664736f6c63430008130033";

type AuthorityHistoryPairFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthorityHistoryPairFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuthorityHistoryPairFactory__factory extends ContractFactory {
  constructor(...args: AuthorityHistoryPairFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authorityFactory: string,
    _historyFactory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<AuthorityHistoryPairFactory> {
    return super.deploy(
      _authorityFactory,
      _historyFactory,
      overrides || {}
    ) as Promise<AuthorityHistoryPairFactory>;
  }
  override getDeployTransaction(
    _authorityFactory: string,
    _historyFactory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authorityFactory,
      _historyFactory,
      overrides || {}
    );
  }
  override attach(address: string): AuthorityHistoryPairFactory {
    return super.attach(address) as AuthorityHistoryPairFactory;
  }
  override connect(signer: Signer): AuthorityHistoryPairFactory__factory {
    return super.connect(signer) as AuthorityHistoryPairFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthorityHistoryPairFactoryInterface {
    return new utils.Interface(_abi) as AuthorityHistoryPairFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthorityHistoryPairFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AuthorityHistoryPairFactory;
  }
}

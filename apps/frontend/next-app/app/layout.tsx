"use client"
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { useMemo, createContext, useContext, useState } from 'react';
import '@rainbow-me/rainbowkit/styles.css';
import { Providers } from './utils/providers';
import Header from "./component/Header";
import Footer from "./component/Footer";
import { ChakraProvider } from "@chakra-ui/react";
// import { Provider as URQLProvider } from "urql";
import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'
import { Toaster } from 'react-hot-toast'
import {
  UrqlProvider,
  ssrExchange,
  cacheExchange,
  fetchExchange,
  createClient,
} from '@urql/next';
import GraphQLClient from "./GraphqlClient";
const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
const API_BASE_URL = 'http://localhost:8080/graphql'

//Setup GraphQL Apollo client
// const URL_QUERY_GRAPHQL = 'http://localhost:8080/graphql'
// const URL_QUERY_GRAPHQL = 'http://localhost:8080/host-runner'

// const client = new ApolloClient({
//   uri: URL_QUERY_GRAPHQL,
//   cache: new InMemoryCache(),
// })

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [client, ssr] = useMemo(() => {
    const ssr = ssrExchange({
      isClient: typeof window !== 'undefined',
    });
    const client = createClient({
      url: API_BASE_URL,
      exchanges: [cacheExchange, ssr, fetchExchange],
      suspense: true,
    });

    return [client, ssr];
  }, []);

  return (
    <html lang="en">
      <body className={`${inter.className} bg-bcolor`}>
        <UrqlProvider client={client} ssr={ssr}> 
        <ChakraProvider>
          <Providers>
          <Header/>
          { children }
          <Footer/>
        </Providers>
        <Toaster />
      </ChakraProvider> 
        </UrqlProvider>  
          </body>
  
    </html>
  );
}

"use client"
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import '@rainbow-me/rainbowkit/styles.css';
import Header from "./component/Header";
import { GraphQLProvider } from "./cartesi/GraphQL";
import { useState } from "react";
import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'
import { Toaster } from 'react-hot-toast'
import { ChakraProviders } from './chakraProvider'
import {
  ChakraBaseProvider,
  extendBaseTheme,
  theme as chakraTheme,
} from '@chakra-ui/react'

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

import configFile from "./cartesi/config.json";

const config: any = configFile;

import injectedModule from "@web3-onboard/injected-wallets";
import { init } from "@web3-onboard/react";

const injected: any = injectedModule();
init({
    wallets: [injected],
    chains: Object.entries(config).map(([k, v]: [string, any], i) => ({id: k, token: v.token, label: v.label, rpcUrl: v.rpcUrl})),
    appMetadata: {
        name: "Cartesi Rollups Test DApp",
        icon: "<svg><svg/>",
        description: "Demo app for Cartesi Rollups",
        recommendedInjectedWallets: [
            { name: "MetaMask", url: "https://metamask.io" },
        ],
    },
});

//Setup GraphQL Apollo client
// const URL_QUERY_GRAPHQL = 'http://localhost:8080/graphql'
const URL_QUERY_GRAPHQL = 'http://localhost:8080/host-runner'

const client = new ApolloClient({
  uri: URL_QUERY_GRAPHQL,
  cache: new InMemoryCache(),
})

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>){
  return (
    <html lang="en">
      <body className={`${inter.className}`} >
      <ApolloProvider client={client}>
      <ChakraProviders>
        {/* <Header/> */}
          {children}
          <Toaster />
          </ChakraProviders>
      </ApolloProvider>
        </body>
    </html>
  );
}

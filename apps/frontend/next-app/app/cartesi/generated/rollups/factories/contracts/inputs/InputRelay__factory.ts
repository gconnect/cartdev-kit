/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InputRelay,
  InputRelayInterface,
} from "../../../contracts/inputs/InputRelay";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IInputBox",
        name: "_inputBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getInputBox",
    outputs: [
      {
        internalType: "contract IInputBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161012738038061012783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051609f6100886000396000602e0152609f6000f3fe6080604052348015600f57600080fd5b506004361060275760003560e01c8062aace9a14602c575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006040516001600160a01b03909116815260200160405180910390f3fea26469706673582212204f57d0a66ead46eb115fe03ed1ea4238a28b5c26ea9292af08fc23144b50d13264736f6c63430008130033";

type InputRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InputRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InputRelay__factory extends ContractFactory {
  constructor(...args: InputRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _inputBox: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_inputBox, overrides || {});
  }
  override deploy(
    _inputBox: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_inputBox, overrides || {}) as Promise<
      InputRelay & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InputRelay__factory {
    return super.connect(runner) as InputRelay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InputRelayInterface {
    return new Interface(_abi) as InputRelayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): InputRelay {
    return new Contract(address, _abi, runner) as unknown as InputRelay;
  }
}
